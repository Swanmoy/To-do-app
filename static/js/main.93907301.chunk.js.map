{"version":3,"sources":["logo.svg","listitem.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","listp","tasklist","map","value","index","id","className","onClick","del","App","delItem","e","tasks","state","target","setState","handleInput","currtask","addItem","preventDefault","push","document","getElementById","console","log","onSubmit","this","onKeyUp","type","autoComplete","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wNAAe,I,KCER,SAASA,EAAKC,GACjB,IACIC,EAOJ,OANAA,EAFYD,EAAME,SAEJC,KAAI,SAACC,EAAOC,GACtB,OAAS,sBACDC,GAAK,WADJ,cACiB,qCAAS,uBAAOA,GAAK,WAAZ,cAA2BF,EAA3B,OAAT,IAAqD,wBAASG,UAAU,SAASD,GAAOD,EAC9GG,QAAYR,EAAMS,IADyD,sBAArD,OADjB,UAKJ,sBACDF,UAAY,gBADX,cAC+BN,EAD/B,O,ICwDES,E,kDA9DX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAMVW,QAAU,SAACC,GACP,IAAIC,EAAQ,EAAKC,MAAMZ,gBAChBW,EAAMD,EAAEG,OAAOT,IACtB,EAAKU,SAAS,CACVd,SAAUW,KAXC,EAcnBI,YAAc,SAACL,GACX,EAAKI,SAAS,CACVE,SAAUN,EAAEG,OAAOX,SAhBR,EAmBnBe,QAAU,SAACP,GACPA,EAAEQ,iBACF,IAAIP,EAAQ,EAAKC,MAAMZ,SACI,IAAvB,EAAKY,MAAMI,UACXL,EAAMQ,KAAK,EAAKP,MAAMI,UAE1BI,SAASC,eAAe,cAAcnB,MAAQ,GAC9C,EAAKY,SAAS,CACVd,SAAUW,EACVK,SAAU,KAEdM,QAAQC,IAAI,EAAKX,MAAMZ,WA5BvB,EAAKY,MAAQ,CACTZ,SAAU,GACVgB,SAAU,IAJC,E,qDAiCf,OAAS,sBACDX,UAAY,YADX,UAEL,uBACKmB,SAAaC,KAAKR,QADvB,UAEA,sBACIZ,UAAY,WADhB,UAEA,iCAEA,uBACMD,GAAK,aACXsB,QAAYD,KAAKV,YACjBY,KAAO,OACPC,aAAe,MACfC,YAAc,oBACd,wBACOzB,GAAK,YACZuB,KAAO,SACPrB,QAAYmB,KAAKR,QAHjB,mBARA,OAFA,OAFA,KAiBO,cACPpB,EADO,CACFG,SAAayB,KAAKb,MAAMZ,SAC7BO,IAAQkB,KAAKhB,UAnBb,QAFK,W,GAlCCqB,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BW,K","file":"static/js/main.93907301.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport './App.css';\r\nexport function List(props) {\r\n    var tasks = props.tasklist;\r\n    var listp;\r\n    listp = tasks.map((value, index) => {\r\n        return ( <\r\n            div id = \"listItem\" > < span > < span id = \"listtask\" > { value } < /span> < button className=\"delbtn\" id = { index }\r\n            onClick = { props.del } > Delete < /button > < /span > < /div >\r\n        );\r\n    });\r\n    return ( <\r\n        div className = \"listContainer\" > { listp } < /div>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { List } from './listitem.js';\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasklist: [],\n            currtask: \"\"\n        };\n    }\n    delItem = (e) => {\n        var tasks = this.state.tasklist;\n        delete tasks[e.target.id];\n        this.setState({\n            tasklist: tasks\n        });\n    };\n    handleInput = (e) => {\n        this.setState({\n            currtask: e.target.value\n        });\n    };\n    addItem = (e) => {\n        e.preventDefault();\n        var tasks = this.state.tasklist;\n        if (this.state.currtask != \"\") {\n            tasks.push(this.state.currtask);\n        }\n        document.getElementById('inputfield').value = \"\";\n        this.setState({\n            tasklist: tasks,\n            currtask: \"\"\n        });\n        console.log(this.state.tasklist);\n    };\n    render() {\n        return ( <\n            div className = \"Container\" >\n            <\n            form onSubmit = { this.addItem } >\n            <\n            div className = \"inputBox\" >\n            <\n            span >\n            <\n            input id = \"inputfield\"\n            onKeyUp = { this.handleInput }\n            type = \"text\"\n            autoComplete = \"off\"\n            placeholder = \"Enter Some Task\" / >\n            <\n            button id = \"addbutton\"\n            type = \"submit\"\n            onClick = { this.addItem } > Add < /button> < /\n            span > <\n            /div>  <\n            List tasklist = { this.state.tasklist }\n            del = { this.delItem }\n            />  < /\n            form > < /\n            div >\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}